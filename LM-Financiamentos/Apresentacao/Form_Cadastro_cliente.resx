<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="img_topo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAZ5JREFUWEft
        lz1Lw0AYxztrW0kGRwVBHFUI0dJE6QuWOujkIIKIoFAFk34uFwVBwaEBB3WwivgFxEXQFnTwBSqPd+UJ
        nOGeJrWJL5A//Kfc5ffL3QWSRBxZjjJp1dH6yo6eXAIr33vtfBmqJRVv3zmOnjJrerLJCrxgF8JptdgE
        q2gghg6DXrnwUAV4rUIdMXQYtBWZgF1oIYaOCI9AABBDJxb4dwLPm1m4X9XgfXtWet1bxNDpRuBmcQx2
        J/rb3dfS8LCmS8eJRQydoAL8yV2422NzUDpWLGLoBBXgy+4V2GOrIBsrFjF0ggrwPefLLgqczg1Jx4pF
        DJ2gArx8z/my8yfn8LcABxExdLoR+E4RQyeowMdODm6Xx6E+PwLnpWG4XhiFx/UfegueNjJwOK1+2X/x
        HLSYnGweL2Lo+Am8bs3Aga5I4W7POhxGxNDxE7hbmZRCvfXOc4sYOn4CLxWzLeFX7zy3iKHjJ9BrEUMn
        FvgLAr/+UXoZocAFYujUplIG+yNqRCDQADuXRUznnBgDSui/ZhVDwdvHEZJIfALcjG3y1BYk6gAAAABJ
        RU5ErkJggg==
</value>
  </data>
  <data name="img_foto.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>